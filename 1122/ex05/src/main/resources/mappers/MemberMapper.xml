<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ex05.mapper.MemberMapper">


	<!-- parameterType은 내가 화면에서 전달받아서 활용할 파라미터 모음집 -->
<select id="search" parameterType="map" resultType="memberDTO">
    SELECT
        RN,
        UNO,
        UNM,
        NVL(TO_CHAR(BIRTH, 'YYYY-MM-DD'), '0000-00-00') AS BIRTH,
        SEX,
        TO_CHAR(ENTRDATE, 'YYYY-MM-DD') AS ENTRDATE,
        JOBRANK,
        JOBSKILL,
        INOFFI_STS
    FROM (
        SELECT
            ROW_NUMBER() OVER (ORDER BY ENTRDATE DESC) AS RN,
            M.UNO AS UNO,
            M.UNM AS UNM,
            M.BIRTH AS BIRTH,
            SE.DTL_CDNM AS SEX,
            M.ENTRDATE AS ENTRDATE,
            JR.DTL_CDNM AS JOBRANK,
            JS.DTL_CDNM AS JOBSKILL,
            IO.DTL_CDNM AS INOFFI_STS
        FROM ex00.member M
            JOIN dtl_code SE ON M.SEX = SE.DTL_CD AND SE.CODE = 'D100'
            JOIN dtl_code JR ON M.JOBRANK = JR.DTL_CD AND JR.CODE = 'D200'
            JOIN dtl_code JS ON M.JOBSKILL = JS.DTL_CD AND JS.CODE = 'D300'
            JOIN dtl_code IO ON M.INOFFI_STS = IO.DTL_CD AND IO.CODE = 'D500'
        <where>
            <if test="unm != null and unm != ''">
                AND M.UNM LIKE '%' || #{unm} || '%'
            </if>
            <if test="inoffiSts != null and inoffiSts != ''">
                AND M.INOFFI_STS LIKE '%' || #{inoffiSts} || '%'
            </if>
            <if test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
   			 	AND ENTRDATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
			</if>
			<if test="startDate != null and startDate != ''">
				AND ENTRDATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
			</if>
			<if test="endDate != null and endDate != ''">
				AND ENTRDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
			</if>
            <if test="jobSkill != null and jobSkill != ''">
                AND M.JOBSKILL LIKE '%' || #{jobSkill} || '%'
            </if>
            <if test="(unm == null or unm == '') and (inoffiSts == null or inoffiSts == '') and (startDate == null or startDate == '') and (endDate == null or endDate == '') and (jobSkill == null or jobSkill == '')">
    			AND 1 = 0
   		    </if>
        </where>
          ORDER BY ENTRDATE DESC
    ) M
  WHERE RN BETWEEN ((#{pageNum} - 1) * #{amount}) + 1 AND #{pageNum} * #{amount}
</select>

<!-- <select id="searchWithPage" parameterType="map" resultType="memberDTO" >
	SELECT 
		M.UNO as UNO
		, M.UNM AS UNM
		, M.PWD AS PWD
		, TO_CHAR(M.birth, 'YYYY-MM-DD') AS BIRTH
		, M.PHOTO AS PHOTO
		, SE.DTL_CDNM AS SEX
		, TO_CHAR(M.ENTRDATE, 'YYYY-MM-DD') AS ENTRDATE
		, JR.DTL_CDNM AS JOBRANK
		, JS.DTL_CDNM AS JOBSKILL
		, DP.DTL_CDNM AS DEVPT
		, IO.DTL_CDNM AS INOFFI_STS
		, M.MBLNO AS MBLNO
		, M.EMAILADDR AS EMAILADDR
		, M.DELETE_COL AS DELETE_COL
	FROM EX00.MEMBER M
		JOIN dtl_code se ON m.sex = se.dtl_cd AND se.code = 'D100'
		JOIN dtl_code jr ON m.jobRank = jr.DTL_CD  AND jr.CODE ='D200'
		JOIN dtl_code js ON m.jobSkill = js.DTL_CD  AND js.CODE ='D300'
		JOIN dtl_code dp ON m.devPt = dp.DTL_CD  AND dp.CODE ='D400'
		JOIN dtl_code io ON m.inoffi_sts = io.DTL_CD  AND io.CODE ='D500'
		JOIN dtl_code dl ON m.delete_col = dl.DTL_CD AND dl.CODE ='D800'
	<where>
		<if test="unm != null and unm != ''">
			OR UNM LIKE '%' || #{unm} || '%'
		</if>
		<if test="inoffiSts != null and inoffiSts != ''">
			OR INOFFI_STS LIKE '%' || #{inoffiSts} || '%'
		</if>
		<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
	        OR (ENTRDATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD') AND ENTRDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD'))
		</if>
		<if test="(startDate != null and startDate != '') and (endDate == null or endDate == '')">
			OR ENTRDATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
		</if>
		<if test="(startDate == null or startDate == '') and (endDate != null and endDate != '')">
			OR ENTRDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
		</if>
		<if test="jobSkill != null and jobSkill != ''">
			OR JOBSKILL LIKE '%' || #{jobSkill} || '%'
		</if>
		<if test="unm == null and unm =='' and inoffiSts == null and inoffiSts == '' and startDate == null and startDate =='' and endDate == null and endDate =='' and jobSkill == null and jobSkill =='' and (pageNum == null or amount == null)">
   			 AND 1 = 0
 		 	</if>
	</where>
	ORDER BY M.ENTRDATE DESC
	OFFSET #{pageDTO.startPage} ROWS
    FETCH NEXT #{pageDTO.criteria.amount} ROWS ONLY
</select> -->

<!-- getTotalCount 메서드를 위한 SQL 쿼리 -->
<select id="getTotalCount" parameterType="memberDTO" resultType="int">
	SELECT COUNT(*) FROM EX00.MEMBER M
	    JOIN dtl_code se ON m.sex = se.dtl_cd AND se.code = 'D100'
	    JOIN dtl_code jr ON m.jobRank = jr.DTL_CD  AND jr.CODE ='D200'
	    JOIN dtl_code js ON m.jobSkill = js.DTL_CD  AND js.CODE ='D300'
	    JOIN dtl_code dp ON m.devPt = dp.DTL_CD  AND dp.CODE ='D400'
	    JOIN dtl_code io ON m.inoffi_sts = io.DTL_CD  AND io.CODE ='D500'
	    JOIN dtl_code dl ON m.delete_col = dl.DTL_CD AND dl.CODE ='D800'
    <where>
       <if test="unm != null and unm != ''">
			AND UNM LIKE '%' || #{unm} || '%'
		</if>
		<if test="inoffiSts != null and inoffiSts != ''">
			AND INOFFI_STS LIKE '%' || #{inoffiSts} || '%'
		</if>
		<if test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
   			 AND ENTRDATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') and TO_DATE(#{endDate}, 'YYYY-MM-DD')
		</if>
		<if test="startDate != null and startDate != ''">
				AND ENTRDATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
		</if>
		<if test="endDate != null and endDate != ''">
				AND ENTRDATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
		</if>
		<if test="jobSkill != null and jobSkill != ''">
			AND JOBSKILL LIKE '%' || #{jobSkill} || '%'
		</if>
		 <if test="(unm == null or unm == '') and (inoffiSts == null or inoffiSts == '') and (startDate == null or startDate == '') and (endDate == null or endDate == '') and (jobSkill == null or jobSkill == '')">
    			AND 1 = 0
   		 </if>
    </where>
</select>

<!-- userProject  -->
<select id="readUserProject" parameterType="long" resultType="memberProjectDTO">
	SELECT
	    M.UNO,
	    M.UNM,
	    TO_CHAR(M.ENTRDATE, 'YYYY-MM-DD') AS ENTRDATE,
	    DC1.DTL_CDNM AS JOBRANK,
	    MP.PJTNO,
	    COALESCE(P.PJTNM, '') AS PJTNM,
	    COALESCE(DC3.DTL_CDNM, '') AS COMPANYNM,
	    COALESCE(TO_CHAR(MP.INP_DATE, 'YYYY-MM-DD'), '') AS INP_DATE,
	    COALESCE(TO_CHAR(MP.WDP_DATE, 'YYYY-MM-DD'), '') AS WDP_DATE,
	    COALESCE(DC2.DTL_CD, '') AS PJTROLE
	FROM MEMBER M
		LEFT JOIN
		    MEMBER_PROJECT MP ON M.UNO = MP.UNO
		LEFT JOIN
		    PROJECT P ON MP.PJTNO = P.PJTNO
		LEFT JOIN
		    DTL_CODE DC1 ON (M.JOBRANK = DC1.DTL_CD AND DC1.CODE = 'D200')
		LEFT JOIN
		    DTL_CODE DC3 ON (P.COMPYNO = DC3.DTL_CD AND DC3.CODE = 'D600')
		 LEFT JOIN
        	DTL_CODE DC2 ON (MP.PJTROLE = DC2.DTL_CD AND DC2.CODE = 'D700')
	WHERE M.UNO = #{UNO}
	ORDER BY MP.INP_DATE DESC
</select>

<update id="updateUserProject" parameterType="map">

 	UPDATE MEMBER_PROJECT
    	SET
        	INP_DATE = TO_DATE(#{inpDate}, 'YYYY-MM-DD'),
        	WDP_DATE = TO_DATE(#{wdpDate}, 'YYYY-MM-DD'),
        	PJTROLE = #{pjtRole}
    	WHERE
        	UNO = #{uno}
        	AND PJTNO = #{pjtNo}
        	
</update>


<delete id="deleteUserProject" parameterType="map">
	
	DELETE FROM MEMBER_PROJECT
    	WHERE UNO = #{uno}
    	AND PJTNO = #{pjtNo}
    	
</delete>

<select id="notAddUserProject" parameterType="map"  resultType="memberProjectDTO">
	 
	SELECT 
		RN
		, PJTNO
		, PJTNM
		, COALESCE(COMPANYNM, '') AS COMPANYNM
		, TO_CHAR(PJTFROMDATE, 'YYYY-MM-DD') AS PJTFROMDATE
		, TO_CHAR(PJTTODATE, 'YYYY-MM-DD') AS PJTTODATE 
	FROM 
  		( 
    		SELECT 
    			P.PJTNO
    			, P.PJTNM
    			, COALESCE(DC3.DTL_CDNM, '') AS COMPANYNM
    			, P.PJTFROMDATE
    			, P.PJTTODATE
    			, ROW_NUMBER() OVER (ORDER BY P.PJTFROMDATE DESC) AS RN 
    FROM PROJECT P 
    LEFT JOIN DTL_CODE DC3 ON (P.COMPYNO = DC3.DTL_CD AND DC3.CODE = 'D600') 
    <where>
      NOT EXISTS ( 
        
        SELECT 1 FROM MEMBER_PROJECT MP 
    	WHERE MP.PJTNO = P.PJTNO AND MP.UNO = #{uno} 
      
      )
      AND P.pjtFromDate > #{entrDate}
      <if test="pjtNm != null and pjtNm != ''">
        AND P.PJTNM LIKE '%' || #{pjtNm} || '%'
      </if>
      <if test="compyNo != null and compyNo != ''">
        AND P.COMPYNO = #{compyNo}
      </if>
    </where>
  ) TEMP 
  WHERE RN BETWEEN ((#{pageNum} - 1) * #{amount}) + 1 AND #{pageNum} * #{amount}
  ORDER BY PJTFROMDATE DESC
 
</select>

<select id="getPjtTotalCount" parameterType="memberProjectDTO" resultType="int">
	SELECT COUNT(*) FROM EX00.PROJECT P
	LEFT JOIN DTL_CODE DC3 ON (P.COMPYNO = DC3.DTL_CD AND DC3.CODE = 'D600')
    <where>  
        <if test="uno !=null">
    	AND NOT EXISTS (
	        SELECT 1
	        FROM MEMBER_PROJECT MP
	        WHERE MP.PJTNO = P.PJTNO
	        AND MP.UNO = #{uno}
    	)
    	AND P.pjtFromDate > #{entrDate}
	    </if>
	    <if test="pjtNm != null and pjtNm != ''">
	        AND P.PJTNM LIKE '%' || #{pjtNm} || '%'
	    </if>
	    <if test="compyNo != null and compyNo != ''">
	        AND P.COMPYNO = #{compyNo}
	    </if>
    </where>
</select>
 
<insert id="addUserProjects" parameterType="memberProjectDTO">

	INSERT INTO member_project (uNO, pjtNo, INP_DATE, WDP_DATE, pjtRole)
    VALUES (#{uno}, #{pjtNo}, TO_DATE(#{pjtFromDate}, 'YYYY-MM-DD'), TO_DATE(#{pjtToDate}, 'YYYY-MM-DD'), '')

</insert>

<select id="checkId" resultType="int">
	
	SELECT COUNT(*)
	FROM ex00.MEMBER
	where U_ID = #{uId}

</select>


</mapper>